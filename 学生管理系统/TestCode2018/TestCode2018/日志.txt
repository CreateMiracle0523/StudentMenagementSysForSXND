
Day 1

      结构体

1.结构体概念
2.定义结构体类型
3.定义和引用结构体


结构体：有时需要将不同类型的数据组合成一个有机的整体 
        若干个数据类型不同的数据项的一个集合

定义结构体
     struct 结构体类型名

                 {  };

struct student      struct是关键字，表示是结构体类型  student是结构体类型名
{
   int   number;
   char  name[20];
   char  sex;                  结构体中的各个成员  
   int   age;                  
   float score;
};



1.1定义结构体类型变量
struct student     
{
   int   number;
   char  name[20];
   char  sex;                  
   int   age;                  
   float score;
};
struct student,student1,student2;

1.2在定义结构体类型的同时定义变量
struct student     
{
   int   number;
   char  name[20];
   char  sex;                  
   int   age;                  
   float score;
}student1,student2;

1.3直接定义结构体变量（不推荐使用）
struct 
{
   int   number;
   char  name[20];
   char  sex;                  
   int   age;                  
   float score;
}student1,student2;



结构体引用
1.不能将结构体变量作为一个整体进行赋值、输出。
2.结构体变量可以像普通变量语言使用、运算。
3.可以引用成员的地址，也可引用结构体变量的地址
ex:printf("%d",&student.num);


赋值
struct student     
{
   int   number;
   char  name[20];
   char  sex;                  
   int   age;                  
   float score;
}student1={201701."Tom",'M',18,100};



结构体数组
 数组中每个元素都是一个结构体类型的数据

struct  
{
   int   number;
   char  name[20];
   char  sex;                  
   int   age;                  
   float score;
}stu[3];


指向结构体类型数据的指针


关键字typedef

用于为某种类型定义一个别名
 一般格式：
             typedef 已有类型名 新类型名表;
             typedef float REAL;



文件

指存储在外部介质上的数据集合（数据文件），操作系统以文件为单位对数据进行管理

对文件进行读写须知：（文件名字 文件状态 当前位置等有关信息） 

      C语言中定义了一个结构体类型FILE来存放以上信息
 
用FILE定义指向文件的指针变量
                        FILE*指针变量名
ex: FLIE*fp;
           只有通过文件指针变量才能调用相应的文件。


文件的打开与关闭

1.文件的打开（fopen函数）

调用方式
      FILE*fp;
      fp=fopen(文件名，使用文件方式)
    ex: fp=fopen("a1","r");

  r(只读)    为输入打开一个文本文件
  w(只写)    为输出打开一个文本文件
 rb(只读)    为输入打开一个二进制文件
 wb(只读)    为输出打开一个二进制文件

2.文件的关闭(fclose函数）

调用方式
       fclose(文件指针)

文件的读写（一次读入一组数据），设置两个函数（fread fwrite）用来读写一个数据块

一般调用形式
   fread(buffer,size,count,fp)    buffer:一个指针（读入\出数据的存放地址） size:读写的字节数 count:要进行读写多少个size字节的数据项 fp:文件型指针
若函数调用成功 函数返回值为count值 即输入\输出的完整的数据项



测试代码
int main()
{
    while(!login())
	{
	   printf("用户名或密码错误，请重新输入！\n");
	}
	displayMenu();
	return 0;
	}

Vs C4996错误解决方法
C4996	use _CRT_SECURE_NO_WARNINGS	



Day 2
学生信息输入模块

增加学生信息模块
修改学生信息模块
删除学生信息模块
保存学生信息模块

void inputInfor(stStu student[],int length);
void updateInfor(stStu student[],int length);
void dellInfor(stStu student[],int length);
void wireToFlie(stStu student[],int length);

二级菜单目录
void inputMenu();

length指代最后输出的学生个数 即最后输入数组的个数

fprintf()函数 

%s %f无法顺序输入的问题解决方法：
1.	scanf_s("%d", &student[i].number);
	printf("修改姓名:");
	scanf("%s", student[i].name);
	printf("修改C语言程序设计成绩:");
	scanf_s("%f", &student[i].Cprogram);
	printf("修改数学成绩:");
	scanf_s("%f", &student[i].math);
	printf("修改英语成绩:");
	scanf_s("%f", &student[i].english);

	2.printf("姓名:");
				scanf("%s",student[i].name);
				printf("\n");

				
				
				printf("C语言成绩：");
				//scanf_s("%f",&student[i].Cprogram);
				scanf("%s", _gcvt(student[i].Cprogram, 10, studentProgram1[i]));
				printf("\n");

				

				printf("高数成绩：");
				//scanf_s("%f",&student[i].HighMath);
				scanf("%s", _gcvt(student[i].HighMath, 10, studentProgram2[i]));
				printf("\n");

				

				printf("英语成绩：");
				//scanf_s("%f",&student[i].English);
				scanf("%s", _gcvt(student[i].English, 10, studentProgram3[i]));
				printf("\n");

现在我遇到的问题是因为void inputInfor(stStu student[],int length);出现某种逻辑问题导致：
void updateInfor(stStu student[],int length);
void dellInfor(stStu student[],int length);
这两个函数无法正常使用
而且经过void wireToFlie(stStu student[],int length);写入到硬盘中观测
void inputInfor(stStu student[],int length);存在下列问题：
1.学号无法正常保存 学号永远只为0
2.姓名只能保存最后输入的人的学号
3.而成绩却只能保存第一个人的成绩

学号实现代码如下：
int inputInfor(stStu student[], int length)
{
	
	int i =0;
	while (i<length)
	{
		printf("请输入以下信息：\n");
		printf("注意：输入0自动结束\n");
		printf("学号:");
		scanf("%d", &student->number);
			if (student->number==0)
			{
				break;
			}


已解决问题：1.实现了保存第一个人的完整信息
            2.同时int inputInfor(stStu student[], int length)函数中输入时没有报错

待解决问题：只能保存一个人的数据，同时保存两个人的数据会造成程序出错
分析原因：  可能是没有存储空间造成的


进行测试：

根据逐语句测试发现 学号 姓名 成绩 都都可以分别存入 student.number[i]  student.name[i]  char studentProgram1[i][80] char studentProgram2[i][80]  char studentProgram3[i][80]
说明！
int inputInfor(stStu student[], int length)
此函数中的储存空间没有问题并且通过arraylength的值亦可说明输入的值有明显的存储空间且被存在了内存中

那么函数void wireToFlie(stStu student[],int length);的只能保存一个人的数据问题即为该函数问题



Day 3

继续进行void wireToFlie(stStu student[],int length)函数中的fprintf()中在Vs中的问题
在函数fprintf()在for循环未完成就加如fclose()会导致函数提前结束并报错
所以更改后的代码为
for (i = 0; i < length; i++) {
		
		fprintf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i]);
	  
		
	}
	    fclose(fp);
		printf("保存完成\n");


解决void queryByName(stStu student[], int length, char name[])
    void outputInfor(stStu student[], int length)
	两个函数中由于printf（""）;输出错误

	将printf("%4d %s %s %s %s","姓名"，"C语言成绩","高数成绩","英语成绩");改为
	printf("学号     姓名     C语言成绩        高数成绩         英语程序 \n");

解决void calculation_Cprogram(stStu student[], int length)中
index = （int）studentProgram1[i] / 10;强制转换类型在Vs2017中报错的问题
将强制转换类型转换为atoi函数
index = atoi(studentProgram3[i]) / 10;




Day 4

优化代码
将student.txt中存入的数据由硬盘中取出 存入到内存中
现在代码是重新启动后如果不进入学生信息增加系统则内存中无任何数据
现在要实现的是重新打开系统后能从硬盘中读取数据至内存中
代码无需进入信息增加系统也可进行其他操作

应将硬盘student.txt文件中的数据再次存入 
student[i].number
student[i].name
studentProgram1[i]
studentProgram2[i]
studentProgram3[i]

则以后的代码可以实现原来的功能
首先我测试了fprintf("");的功能要想实现程序正确运行要存储arraylength的值
那么在文档student.txt中打开存储的信息如下：
2   1    zrx     99    99    99    2    qyq     60    60    60 

存储代码如下：
for (i = 0; i < length; i++) {
		fprintf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i]);
	}

那么我要进行将arraylength和其他数据换行存储
fprintf(fp, "\n");无法实现
fprintf(fp, "\r\n");即可实现 因为student.txt是二进制文档

那么我在student.txt中存入的数据显示情况为：
2
   1    zrx     99    99    99 
   2    qyq     66    77    88 

加入的代码如下：
printf("正在读取数据请稍后.....\n");

		//打开文件
		fp = fopen("student.txt", "r");   
		//若打开文件失败
		if (fp == NULL) {
			exit(0);
		}

		//printf("hello world");
		
		//读取结构体数据的总数
		fscanf(fp, "%d", &arrayLength);
		
		//数据总数非法
		if (arrayLength <= 0) {
			fclose(fp);
		}
		
		//读取数据
		for (i; i < arrayLength; i++) {
			if ((fscanf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i])) != 2) {
				break;
			}
		}
		printf("文件预计由数据%d个，实际读到%d个\n", arrayLength, i);

		经过printf("hello world");测试
		出错代码为：
		for (i; i < arrayLength; i++) {
			if ((fscanf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i])) != 2) {
				break;
			}
		}
		即为读取数据读不到fscanf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i]);读取不到任何信息

	    更改函数void saveToFile(stStu student[], int length)中的代码：
		fprintf(fp, "%4d    %s     %s    %s    %s ", student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i]);
		改为fprintf(fp,"%d %s %s %s %s",student[i].number, student[i].name, studentProgram1[i], studentProgram2[i], studentProgram3[i]);
  
        解决问题方法：
		for (i; i < arrayLength; i++) {
		fscanf(fp, "%d %s %s %s %s", &student[i].number,&student[i].name, &studentProgram1[i],&studentProgram2[i],&studentProgram3[i]);
	}
	    最后代码为：
		FILE*fp=NULL;
	int i = 0;
	welcome();
	printf("正在读取数据请稍后.....\n");

	//打开文件
	fp = fopen("student.txt", "r");
	
	//若打开文件失败
	if (fp == NULL) {
		exit(0);
	}

	//printf("hello world");

	//读取结构体数据的总数
	fscanf(fp, "%d", &arrayLength);

	//数据总数非法
	if (arrayLength <= 0) {
		fclose(fp);
	}

	//读取数据
	for (i; i < arrayLength; i++) {
		fscanf(fp, "%d %s %s %s %s", &student[i].number,&student[i].name, &studentProgram1[i],&studentProgram2[i],&studentProgram3[i]);
	}


	printf("文件预计由数据%d个，实际读到%d个\n", arrayLength, i);
	printf("\n");


